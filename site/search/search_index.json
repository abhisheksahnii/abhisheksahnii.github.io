{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HPC (High Perfomance Computing)","text":""},{"location":"#hpc-introduction","title":"HPC Introduction","text":"<p>High-performance computing (HPC) is the ability to process data and perform complex calculations at high speeds. To put it into perspective, a laptop or desktop with a 3 GHz processor can perform around 3 billion calculations per second. While that is much faster than any human can achieve, it pales in comparison to HPC solutions that can perform quadrillions of calculations per second. \u2022 One of the best-known types of HPC solutions is the supercomputer. A supercomputer contains thousands of compute nodes that work together to complete one or more tasks. This is called parallel processing. It\u2019s similar to having thousands of PCs networked together, combining compute power to complete tasks faster.</p>"},{"location":"#1-what-is-a-cluster","title":"1. What is a cluster?","text":"<p>A cluster consists of a large number of interconnected machines called as \"NODE\". The nodes running your programs are usually called Compute Node. To turn the nodes into a cluster we need three more ingredients: a network, data storage, and a queue manager. </p>"},{"location":"#2-what-are-the-types-of-nodes-in-an-hpc-cluster","title":"2. What are the Types of Nodes in an HPC Cluster?","text":"<p>In an HPC (High-Performance Computing) cluster, a node is an individual computing unit within the cluster. Each node is typically a separate physical or virtual machine that contributes to the overall computing power of the cluster.</p>"},{"location":"#1-compute-node","title":"1. Compute Node","text":"<ul> <li>Runs the actual computational workloads.  </li> <li>Typically has powerful CPUs, GPUs, and large amounts of RAM.  </li> <li>Managed by the job scheduler (e.g., OpenPBS, Slurm).  </li> </ul>"},{"location":"#2-head-node-login-node-management-node","title":"2. Head Node (Login Node / Management Node)","text":"<ul> <li>Provides user access for job submission and system management.  </li> <li>Runs job scheduling software like OpenPBS, Slurm, or Torque.  </li> <li>Often does not run computational workloads.</li> </ul>"},{"location":"#3-storage-node","title":"3. Storage Node","text":"<ul> <li>Manages storage systems like NFS, Lustre, or GPFS.  </li> <li>Provides high-speed access to shared data.</li> </ul>"},{"location":"#4-gateway-node","title":"4. Gateway Node","text":"<ul> <li>Acts as a bridge between the internal HPC network and external users.  </li> <li>Can be used for security purposes (firewall, SSH access, etc.).</li> </ul>"},{"location":"#5-io-node","title":"5. I/O Node","text":"<ul> <li>Handles input/output operations for efficient data movement.  </li> <li>Often found in clusters using parallel file systems like Lustre.</li> </ul>"},{"location":"#6-service-node","title":"6. Service Node","text":"<ul> <li>Runs system services such as monitoring, logging, or job scheduling.</li> </ul> <p>Each node is connected via a high-speed interconnect (like InfiniBand or 10/100Gb Ethernet) to ensure efficient communication.</p>"},{"location":"#access-the-hpc-cluster","title":"Access the HPC Cluster","text":"<p>Connecting to the HPC cluster MANIT BHOPAL</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"Text Only<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"CCF%20Resources/","title":"CCF Resources","text":""},{"location":"CCF%20Resources/#computing-resources-available-in-ccf","title":"Computing Resources available in CCF","text":""},{"location":"CCF%20Resources/#compute-nodes","title":"Compute Nodes:","text":"<p>8 compute nodes (CPU) (Rpeak \u2013 25.6 TFLOPS) 2 GPU compute nodes (Rpeak \u2013 29.8 TFLOPS) 576 Tensor Cores per GPU</p>"},{"location":"CCF%20Resources/#dgx-nvidia-a100","title":"DGX NVIDIA A100:","text":"<p>Computing density of packing 5 petaFLOPS of AI performance or 10 petaOPS INT8 into a 6U form factor GPUs: 8x NVIDIA A100 Tensor Core GPUs CPUs: 432 Tensor Cores per GPU GPU Memory: 40 GB x 8 i.e. 320 GB in total System Memory: 1TB System Storage: OS: 2x 1.92TB M.2 NVME drives Internal Storage: 15TB (4x 3.84TB) U.2 NVME drives.</p>"},{"location":"CCF%20Resources/#cpu","title":"CPU","text":"<p>Total 656 CPU Cores (400 from Compute Nodes &amp; 256 from NVIDIA A100 DGX Server)</p>"},{"location":"CCF%20Resources/#ram","title":"RAM","text":"<p>Total 2920 GB Memory (1920 GB from all compute nodes and 1 TB from NVIDIA A100 DGX Server)</p>"},{"location":"CCF%20Resources/#storage","title":"Storage","text":"<p>120 TB PFS storage (Parallel File system)</p>"},{"location":"HPC/","title":"About CCF","text":""},{"location":"HPC/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"HPC/#project-layout","title":"Project layout","text":"Text Only<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> Screenshot"},{"location":"HPC/#project-layout-5","title":"Project layout 5","text":"Method Description <code>GET</code> :material-check:     Fetch resource <code>PUT</code> :material-check-all: Update resource <code>DELETE</code> :material-close:     Delete resource First Header Second Header Third Header Content Cell Content Cell Content Cell Content Cell Content Cell Content Cell First Header Second Header Third Header Left Center Right Left Center Right"},{"location":"HPC/#project-layout-2","title":"Project layout 2","text":"Python<pre><code>    import re\n    import sys\n    from markdown.__main__ import run\n    if __name__ == '__main__':\n    sys.argv[0] = re.sub(r'(-script\\.pyw|\\.exe)?$', '', sys.argv[0])\n    sys.exit(run())\n</code></pre>"},{"location":"HPC/#project-layout-3","title":"Project layout 3","text":"Bash<pre><code>#!/bin/bash\n\n# Greet user and request their name\necho \"The activity generator\"\nread -p \"What is your name? \" name\n\n# Create an array of activities\nactivity[0]=\"Football\"\nactivity[1]=\"Table Tennis\"\nactivity[2]=\"8 Ball Pool\"\nactivity[3]=\"PS5\"\nactivity[4]=\"Blackjack\"\n\narray_length=${#activity[@]} # Store the length of the array\nindex=$(($RANDOM % $array_length)) # Randomly select an index from 0 to array_length\n\n# Invite the user to join you participate in an activity\necho \"Hi\" $name, \"would you like to play\" ${activity[$index]}\"?\"\nread -p \"Answer: \" answer\n</code></pre>"},{"location":"HPC/#project-layout-4","title":"Project layout 4","text":"HTML<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;body&gt;\n\n&lt;h1&gt;My First Heading&lt;/h1&gt;\n&lt;p&gt;My first paragraph.&lt;/p&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"HPC/#project-layout-5_1","title":"Project layout 5","text":"Ruby<pre><code>def sum_eq_n?(arr, n)\n  return true if arr.empty? &amp;&amp; n == 0\n\n  arr.product(arr).reject { |a,b| a == b }.any? { |a,b| a + b == n }\nend\n</code></pre> <p>Lorem ipsum</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> Job-submission <p>How to submit a job on HPC?  1) Open Moba Xterm and login to HPC  2) ssh test@hpc.manit.ac.in  3) press \"Enter\".</p>"}]}